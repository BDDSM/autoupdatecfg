#Использовать v8runner

Перем РезервнаяКопия;

Процедура Выполнить(Параметры) Экспорт

	МенеджерРелизов = Новый ПоследнийРелизКонфигурации;
	Информация = МенеджерРелизов.ПолучитьИнформацию(Параметры);
	
	Если НЕ Информация = Неопределено Тогда
		Параметры.ПолнаяВерсия = Информация.Версия;
		Результат = МенеджерРелизов.Скачать(Параметры);

		ПутьРаспаковки = Параметры.КаталогСохранения + "/" + Параметры.Тип + "/"+ СтрЗаменить(Параметры.ПолнаяВерсия, ".", "_");

		КаталогОбъект = Новый Файл(ПутьРаспаковки);

		ОбеспечитьКаталог(ПутьРаспаковки);

		ФайлАрхива = Результат.ПолноеИмя;

		Результат = "";

		Архив = Новый ЧтениеZipФайла(ФайлАрхива); 
		Архив.ИзвлечьВсе(КаталогОбъект.ПолноеИмя);
		Архив.Закрыть();

		Параметры.КаталогВерсии = КаталогОбъект.ПолноеИмя;

		Если Параметры.КаталогСохранения <> "" Тогда
			ПараметрыРезервирования = Новый Структура();
			ПараметрыРезервирования.Вставить("ПутьКБазе", Параметры.ПутьКБазе);
			ПараметрыРезервирования.Вставить("Логин", Параметры.ЛогинБД);
			ПараметрыРезервирования.Вставить("Пароль", Параметры.ПарольБД);
			ПараметрыРезервирования.Вставить("КаталогКопий", Параметры.КаталогКопий);
			ПараметрыРезервирования.Вставить("ИмяФайлаВыгрузки", Параметры.ИмяФайлаВыгрузки);
			ПараметрыРезервирования.Вставить("Суфикс", Параметры.Суфикс);

			РезервнаяКопия.СделатьРезервнуюКопию(ПараметрыРезервирования);
		КонецЕсли;

		ПараметрыСоединения = Новый Структура;
		ПараметрыСоединения.Вставить("ПутьКБазе", Параметры.ПутьКБазе);
		ПараметрыСоединения.Вставить("Логин", Параметры.ЛогинБД);
		ПараметрыСоединения.Вставить("Пароль", Параметры.ПарольБД);
		ПараметрыСоединения.Вставить("КаталогВерсии", Параметры.КаталогВерсии);

		УстановитьОбновление(ПараметрыСоединения);

	Иначе
		ВызватьИсключение "Получены ошибочные данные по последнему релизу";
	КонецЕсли;

	
КонецПроцедуры

// Обновляет конфиграцию
//
// Параметры:
//  Параметры  - Структура - Параметры соединения и архивирования
//    ПутьКБазе - Строка - Строка соединения с базой
//    Логин - Строка - Логин для входа в базу
//    Пароль - Строка - Пароль для входа в базу
//    КаталогВерсии - Строка - Месторасположение файла обновления
//
// Возвращаемое значение:
//   Булево
//
Функция УстановитьОбновление(Параметры) Экспорт

	Попытка

		ТипБазы = РезервнаяКопия.ПолучитьТипБД(Параметры.ПутьКБазе);

		Если ТипБазы = "ws" Тогда
			Сообщить("Нельзя сделать обновление для базы на WEB-сервере");
			Возврат Ложь;
		ИначеЕсли ТипБазы = "Srvr" Тогда
			СтрокаСоединения = "/IBConnectionString" + ОбернутьВКавычки(Параметры.ПутьКБазе);
		ИначеЕсли ТипБазы = "File" Тогда
			СтрокаСоединения = "/F" + Параметры.ПутьКБазе;
		КонецЕсли;

		Конфигуратор = Новый УправлениеКонфигуратором();	
		Конфигуратор.УстановитьКонтекст(СтрокаСоединения, Параметры.Логин, Параметры.Пароль);
		Конфигуратор.ОбновитьКонфигурацию(Параметры.КаталогВерсии, Ложь);
		Конфигуратор.ОбновитьКонфигурациюБазыДанных();
	Исключение
		Сообщить("словили ошибку");
		Возврат Ложь;
	КонецПопытки;

	Возврат Истина;

КонецФункции // УстановитьОбновление(Параметры)

Функция ОбернутьВКавычки(Знач Строка);
	Возврат """" + Строка + """";
КонецФункции

// Вспомогательные методы
// 
Процедура ОбеспечитьКаталог(Знач Каталог)

	Файл = Новый Файл(Каталог);
	Если Не Файл.Существует() Тогда
		СоздатьКаталог(Каталог);
	ИначеЕсли Не Файл.ЭтоКаталог() Тогда
		ВызватьИсключение "Каталог " + Каталог + " не является каталогом";
	КонецЕсли;
КонецПроцедуры

Процедура Инициализация()
	РезервнаяКопия = Новый РезервнаяКопия;
	
КонецПроцедуры

Инициализация();
